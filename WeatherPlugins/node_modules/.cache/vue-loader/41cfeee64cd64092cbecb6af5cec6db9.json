{"remainingRequest":"D:\\BaiduSyncdisk\\Plugins\\天气\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\BaiduSyncdisk\\Plugins\\天气\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"D:\\BaiduSyncdisk\\Plugins\\天气\\src\\App.vue","mtime":1655394142893},{"path":"D:\\BaiduSyncdisk\\Plugins\\天气\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\BaiduSyncdisk\\Plugins\\天气\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\BaiduSyncdisk\\Plugins\\天气\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\BaiduSyncdisk\\Plugins\\天气\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\BaiduSyncdisk\\Plugins\\天气\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCnAgew0KICBtYXJnaW46IDA7DQogIHBhZGRpbmc6IDA7DQp9DQoNCi52LXdlYXRoZXIgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgdXNlci1zZWxlY3Q6IG5vbmU7DQp9DQoNCg0KLnYtd2VhdGhlcj4gLmlzLXNtYWxsLmlzLW9uZWxpbmU+LCAudi13ZWF0aGVyPiAuaXMtbm9ybWFsLmlzLW9uZWxpbmU+ICB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiA3cHg7DQogIGxlZnQ6IDEwcHg7DQogIHdpZHRoOiAzMHB4Ow0KICBoZWlnaHQ6IDMwcHg7DQp9DQoNCg0KLnYtd2VhdGhlcj4gLmlzLXNtYWxsLmlzLW11bHRpbGluZT4gcCB7DQogIGhlaWdodDogMjRweDsNCiAgbGluZS1oZWlnaHQ6IDI0cHg7DQogIGZvbnQtc2l6ZTogMTZweDsNCn0NCg0KDQoudi13ZWF0aGVyPiAuaXMtbm9ybWFsLmlzLW11bHRpbGluZT4gLm1hcCBkaXYgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIHdpZHRoOiAyNHB4Ow0KICBoZWlnaHQ6IDI0cHg7DQogIG1hcmdpbi1sZWZ0OiAtMTRweDsNCiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsNCn0NCg0KLnYtd2VhdGhlcj4gLmlzLW5vcm1hbC5pcy1tdWx0aWxpbmU+IHAgew0KICBoZWlnaHQ6IDIwcHg7DQogIGxpbmUtaGVpZ2h0OiAyMHB4Ow0KICBmb250LXNpemU6IDE2cHg7DQp9DQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div class=\"v-weather\" @click=\"getWeather\"\r\n       :style=\"`color: rgb(${convartedColor[0]}, ${convartedColor[1]}, ${convartedColor[2]})`\">\r\n    <span>{{ position.area }} / {{ weather.weather }} / {{ weather.temp }}℃</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport Lottie from 'lottie-web'\r\nimport weatherIcon from './iconJson'\r\n\r\nexport default {\r\n  name: \"vMiniWeather\",\r\n  props: {\r\n    size: {\r\n      type: String,\r\n      default: \"small\",\r\n      validator: value => {\r\n        return ['small', 'normal'].includes(value)\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"oneline\",\r\n      validator: value => {\r\n        return ['oneline', 'multiline'].includes(value)\r\n      }\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: \"000000\"\r\n    },\r\n    iconSize: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    url: {\r\n      type: String,\r\n      default: 'https://apia.aidioute.cn/weather/index.php'\r\n    }\r\n  },\r\n  data: () => ({\r\n    convartedColor: [],\r\n    location: null,   //定位功能获取的经纬度\r\n    position: {},   //经纬度查询获得的位置信息\r\n    weather: {},\r\n    weatherIconAnimation: null,\r\n    timer: null,\r\n    errorMsg: \"\"\r\n  }),\r\n  watch: {\r\n    color(data) {\r\n      this.convartColor()\r\n      Lottie.destroy()\r\n      if (this.weather.hasOwnProperty('code')) {\r\n        this.showIcon()\r\n      } else {\r\n        this.getLocation()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.convartColor()\r\n    this.getLocation()\r\n    this.timer = setInterval(() => {\r\n      this.getLocation()\r\n    }, 30 * 60 * 1000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  methods: {\r\n    convartColor() {\r\n      const colorTemp = /([a-zA-Z0-9]{2})([a-zA-Z0-9]{2})([a-zA-Z0-9]{2})/.exec(this.color)\r\n      this.convartedColor = [\r\n        parseInt(`0x${colorTemp[1]}`),\r\n        parseInt(`0x${colorTemp[2]}`),\r\n        parseInt(`0x${colorTemp[3]}`)\r\n      ]\r\n    },\r\n    getLocation() {\r\n      if (typeof window !== \"undefined\" && window.navigator.geolocation) {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n              this.location = {\r\n                latitude: position.coords.latitude.toFixed(6),\r\n                longitude: position.coords.longitude.toFixed(6)\r\n              }\r\n              this.getWeather()\r\n            },\r\n        )\r\n      }\r\n    },\r\n    async getWeather() {\r\n      let url = ''\r\n      if(this.location) {\r\n        url = `${this.url}?location_type=1&lat=${this.location.latitude}&lng=${this.location.longitude}`\r\n      } else {\r\n        url = `${this.url}?location_type=0`\r\n      }\r\n      try {\r\n        const weather = await axios.get(url)\r\n        if (weather.status === 200 && weather.data.error === 0) {\r\n          this.weather = weather.data.data.weather\r\n          this.position = weather.data.data.location\r\n          if (weather.data.data.location.error_msg !== '成功。') {\r\n            message.warning(weather.data.data.location.error_msg)\r\n          }\r\n          this.showIcon()\r\n        } else {\r\n          message.error(\"网络错误!\")\r\n        }\r\n      } catch (err) {\r\n        console.log(err)\r\n        message.error(\"未知错误!\")\r\n      }\r\n    },\r\n    showIcon() {\r\n      const svgContainer = this.$refs.svgContainer\r\n      if (this.weatherIconAnimation) {\r\n        this.weatherIconAnimation.destroy()\r\n      }\r\n      this.weatherIconAnimation = Lottie.loadAnimation({\r\n        wrapper: svgContainer,\r\n        animType: 'svg',\r\n        loop: true,\r\n        animationData: weatherIcon[this.weather.weather](this.convartedColor[0] / 255, this.convartedColor[1] / 255, this.convartedColor[2] / 255)\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\np {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.v-weather {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n\r\n\r\n.v-weather> .is-small.is-oneline>, .v-weather> .is-normal.is-oneline>  {\r\n  position: absolute;\r\n  top: 7px;\r\n  left: 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n\r\n.v-weather> .is-small.is-multiline> p {\r\n  height: 24px;\r\n  line-height: 24px;\r\n  font-size: 16px;\r\n}\r\n\r\n\r\n.v-weather> .is-normal.is-multiline> .map div {\r\n  display: inline-block;\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-left: -14px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.v-weather> .is-normal.is-multiline> p {\r\n  height: 20px;\r\n  line-height: 20px;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"]}]}